# JS 스터디 4일차

> 절대 보기 좋게 정리하려고 하지 마시고, 
정해진 시간에 최대한 많은 내용을 기입하는 방식으로 최대한 많이 작성해주세요!
(Gitbook에서 복사해온 내용을 제외하고, 작성 할 때 마다 본인의 이름을 꼭 적어주세요!)
> 

## 01. ****this, 콜백함수**** 생각해볼 것들

---

<aside>
📌 🤔 : 아래의 내용들은 이번 장에서 얻을 수 있는 지식들입니다. 이러한 것들을 배운다고 생각하고 각 챕터를 읽어가주세요. 다 읽은 이후에 아래의 질문에 대한 답을 답할 수 있으면 완벽합니다.

</aside>

this

**1.전역 객체란 무엇을 의미하는 것 일까요?**

종호 : 자바스크립트에서 모든 객체가 속해있는 객체

다빈 : 모든 객체의 유일한 최상위 객체를 의미한다. Browser-side에서는 window

Server-side(Node-js)에서는 global객체를 의미한다

찬웅 : 가장 최상위에 있는 객체를 의미
전역 객체를 사용하면 어디서나 사용 가능한 변수나 함수를 만들 수 있다.
전역 객체는 언어 자체나 호스트 환경에 기본 내장되어 있는 경우가 많다.
브라우저 환경에선 전역 객체를 window, Node.js 환경에선 global라고 부르는데,
각 호스트 환경마다 부르는 이름은 다르다.

**2.다른 언어의 객체와 자바스크립트의 객체는 어떻게 다를까요?**

종호 : 정적 타입과 동적타입

변수의 값을 넣을 때 다른 언어 같은 경우  (실수,소수점,큰 숫자)등등 표현하기 위해서 int,float,double등등 사용한다
자바스크립트는 자료형 선언에 크개 구여받지 않습니다.

다빈 : 객체란 이름(name)과 값(value)으로 구성된 프로퍼티(property)의 정렬되지 않은 집합입니다.

프로퍼티의 값으로 함수가 올 수도 있는데, 이러한 프로퍼티를 메소드(method)라고 합니다.

성연 : 파이썬에서는 모든것이 객체(숫자, 문자열, 함수 등 내부에 존재하는 모든 값)

          하지만 JS에서는 **“원시타입(number, boolean)을 제외한 참조타입이 객체이며”** 

         **이에는 객체, 배열, 함수 등을 포함 객체**가 가진 속성을 property,  행동을 method라고 한다.

찬웅 : 

각 언어의 객체 사용 가능한 범위

- 자바스크립트
**어디서든 사용 가능하다**
- 다른 객체지향 언어들
클래스 안에서만 사용 가능하다.

**3.그렇다면 this는 어떻게 달라질까요?**

찬웅 : 

**this는 함수를 호출 할 때 결정 된다고 보면 된다.**

아래에는 this를 사용하는 예시

- 전역공간
- 메서스로써 호출 시
- 함수로써 호출 시
- 콜백 함수 호출 시
- 생성자 함수 내부

다빈 : 

**다른 객체지향언어에서 this는 클래스로 생성한 인스턴스 객체를 의미한다.**

클래스에서만 사용할 수 있기 때문에 혼란의 여지가 없거나 많지않다.

**자바스크립트에서의 this는 어디서든 사용할 수 있다.**

실행 컨텍스트가 생성될 대 함께 결정된다.(함수호출할때 결정된다)

전역공간에서의 this는 전역 객체를 가리킨다

**4.함수와 메서드의 차이에 대해서 조금 더 알게된게 있을까요? 지난번에 했던 답과는 어떻게 다를까요?**

종호 :함수는 프로그램에서 어떤 작업을 수행하는 블록이며, 일련의 입력을 받아서 이를 가공하여 결과를 출력합니다

성연

함수 : 동작을 서술

메서드 : 객체한정으로 동작을 서술한 함수? 객체.함수

다빈 : 호출방법의 차이

점표기법 대괄호 표기법이 있는데 어떤 함수를 호출할 때 그 함수 이름(프로퍼티명)앞에

객체가 명시돼 있는 경우엔 메서드로 호출한것. 이 외엔 함수

찬웅 :  이 둘의 유일한 차이는 독립성에 있다.
함수는 그 차제로 독립적인 기능을 수행하지만, 메서드는 자신을 호출한 대상 객체에 관한 동작에 수행한다.

**콜백함수**

**1.프로그래밍의 제어권이라는 것은 무엇을 말하는 걸까요?**

종호 : 

순차적구조 (순차적 진행)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/997f4b0e-619a-4b3d-9c9a-87dd7770203d/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a9c0265c-b95f-49bf-95ce-42dcaa3d3d9b/Untitled.png)

선택구조 (if , selectio)

반복구조 (for, while)

건너뜀구조(break,continue)

실행 순서를 제어하는 것 ,언제 어떤 코드가 실행되는지 결정(설계도)

찬웅 : 콜백함수와 깊은 관련이 있고, 콜백함수의 제어권도 함께 위임한 것을 말한다.

**2.콜백 지옥이란 뭘까요?**

```jsx
setTimeout(function (name) {
	var coffeeList = name;
	console.log(coffeeList);

	setTimeout(function (name) {
		coffeeList += ', ' + name;
		console.log(coffeeList);

		setTimeout(function (name) {
			coffeeList += ', ' + name;
			console.log(coffeeList);

			setTimeout(function (name) {
				coffeeList += ', ' + name;
				console.log(coffeeList);
			}, 500, '카페라떼');
		}, 500, '카페모카');
	}, 500, '아메리카노');
}, 500, '에스프레소');
```

찬웅 : 콜백 함수를 익명함수로 전달하는 과정이 반복되어 코드의 들여쓰기 수준이 감당하기 힘들 정도로 깊어지는 현상을 말한다.

종호 :  (3, 4 중 반복문 or 함수)

콜백함수 : 함수에 파라미터로 들어가는 함수
다른함수에 매개변수로 넘겨준 함수
비동기 프로그래밍시 발생하는 문제로서, 함수의 매개 변수로 넘겨지는 콜백 함수가 반복되어 코드의 들여쓰기 수준이 감당하기 힘들 정도로 깊어지는 현상을 말한다.

다빈 : 

콜백함수를 익명 함수로 전달하는 과정에서 또 다시 안에 함수 호출이 반복되어

코드의 들여쓰기 수준이 감당하기 힘들정도로 깊어지는 현상

이벤트처리나 서버 통신과 가은 비동기 작업을 제어하기 위해서 사용되는데

이러한 프로그래밍은 가독성이 떨어지고 코드수정을 어렵게한다.

**3.추상화란 뭘까요?**

다빈: 

공통된 하나의 로직을 분리해서 공통화 하는 행위

추상화를 하면 단순하게 공통적인 부분을 줄이는 정도가 아니라

개념들간의 계층이 생기는데 이걸 추상화 단계라고하며 코드를 관리하고

설계하는데 좋은 기준이 된다.

종호 : (  UI )

추상화(Abstraction)는 복잡한 시스템, 데이터, 프로세스 등을 단순화하여 핵심적인 개념이나 기능에만 집중하도록 만드는 것을 말합니다.

찬웅 : 

어떤 종류의 대상들에 대해 그것이 가져야 할 핵심적인 특징들을 가지는 모델을 만드는 것이다.

성연 : 

프로그램에 필요한 요소만 사용해서 객체를 표현하는 것을 의미

- 사전적 의미 : 복잡한 자료, 모듈, 시스템 등으로부터 핵심적인 개념과 기능을 간추려내는 것
- 객체의 프로퍼티와 메소드를 정의하는 작업. 선언 부분만 만들뿐 구현부분은 작업하지 않음

## 02. ****this, 콜백함수**** KeyWord

---

<aside>
📌 🤔 : 이번 장에서 가장 중요한 키워드입니다. 3,4장을 읽고 아래의 단어들을 조금 더 이해하는게 오늘의 목표입니다. 천천히 읽어보시고, 각 조원분들과 적당하게 나눠서 아래의 키워드를 직접 설명해주세요.

</aside>

this

렉시컬 환경 : 

코드 block, functionm script를 실행하기 앞서 생성되는 특별한 객체로 실행할 스코프범위

안에 있는 변수와 함수를 프로퍼티로 저장하는 객체다.

`**Lexical Environment`는 코드 `block`, `function`, `script`를 실행하기 앞서 생성되는 특별한 객체로, 실행할 스코프 범위 안에 있는 변수와 함수를 프로퍼티로 저장하는 객체다.**

즉 우리가 소스 코드를 실행하면서 참조가 필요한 변수의 값을 이 Lexical Environment 라는 객체에서 식별자 이름을 키로 찾는다고 보면 된다.

**전역 객체의 렉시컬 환경 :** 

scope를 전체 범위로 봤을때의 lexical environment? 

프로퍼티 : 객체(프로퍼티의 집합) 안에 선언된 이름과 값으로 이루어진 한 쌍

 고차함수 : 함수의 외부에서 콜백함수(인자로 넘어간 함수) 를 전달받은 함수

## 03. ****this, 콜백함수**** Questions

---

<aside>
📌 Questions에 대한 답은 팀원분들과 함께 작성해주세요, 내용을 작성하는데 필요한 개념이나 단어들을 모르는 팀원이 없도록 서로 설명해가며 작성해야합니다. 최종적으로 제출한 답변에 있는 개념이나 단어는 모두가 알고 있어야 합니다.

</aside>

this

**1.책에서 self 변수로 선언을 해서 만들어서 구현하려고 했던 'this'는 어떤 것 때문에 그렇게 구현했을까요?**

 호출한 주체에 정보가 담기지 않은 경우에는 this가 전역객체를 가리키게되는데 이부분에

설계상의 오류가 있기때문에 우회해서 self라는 변수를 선언해서 this가 우리가 원한는 값을

가져올수 있게만들기위해

```jsx
var obj1 = {

  outer: function () {
    console.log(this);
    var innerFunc1 = function () {
      console.log(this);
    }

    innerFunc1();
    var self = this;
    var innerFunc2 = function () {
      console.log(self);
    };
    innerFunc2();
  }

};
obj1.outer();
```

**2.다시 함수와 메서드의 차이를 말씀해주세요**

함수 : 기능의 서술, 독단적으로 실행가능 

메서드 : 객체에 한정된 함수, 객체.함수, 주체를 통해 실행 될수 있다

**3.프로퍼티에 할당, 메서드로서의 호출을 설명해주세요**

할당 : 객체에 키와값을 설정해주는것

            객체에 이미 키가 존재하는데 다시 한 번 할당하면 값이 교체(수정)된다

메서드로서의 호출

매서드는 점표기법, 대괄호표기법을 이용하여 어떤 함수를 호출할때 그함수 이름앞에

객체가 명시되어있는 경우에는 메서드로 호출한것이다.(호출의 주체가있다.)

호출의 주체인 (.점표기법, 대괄호)가 있어서 this가 바인딩(묶는다)된다.

**4."this 가 주는 인상"이라는 개념을 본인이 생각한대로 아는만큼 작성해주세요.**

박성연 : 본인이 지금 작업하고 있는 파일의 최종경로와 같은 개념으로 this가 속한 객체를 반환하는 것. 

다빈: **함수와 객체의 구분이 느슨한** 자바스크립트에서 this는 실질적으로 이둘을 구분하는 유일한 기능이다.

종호 : 호출하는 방법에 따라 결정되는 것,( 호출을 누가 했느냐)

찬웅 :  함수나 메서드로서 호출 할 때 참고 하는 것이 모두 다르며, this 자체가 지칭 하는 것이 무엇인지가 중요하다고 생각한다.

~~클로저~~

~~1.특정 변수를 참조하는 내부함수를 외부로 전달하는 경우, 해당 실행컨텍스트가 끝나도 가비지 컬렉션에 의해 소멸되지 않는다는 "기계적 측면"~~

~~2.특정 조건에서만 참조가 가능한 정보라는 관점에서의 정보 은닉 측면을 나누어서 보면 좋습니다~~

## 04. ****this, 콜백함수**** Answers

---

### Question 01.

<aside>
❓ (질문을 복사해주세요, 아래에 각자 이름과 함께 생각해본 답변을 적어주세요)

</aside>

조원1 : 

조원2 : 

조원3 : 

조원4 : 

### Question 02.

<aside>
❓ (질문을 복사해주세요, 아래에 각자 이름과 함께 생각해본 답변을 적어주세요)

</aside>

### Question 03.

<aside>
❓ (질문을 복사해주세요, 아래에 각자 이름과 함께 생각해본 답변을 적어주세요)

</aside>

## 05. ****this, 콜백함수**** 모르겠어요!

---

<aside>
🤔 책을 읽어가며 모르겠는 부분, 내용, 개념, 단어등을 조원들의 이름과 함께 적어주세요.
책이 잘 읽히지 않는다면 여기에 좀 더 잘 정리해서 내가 이해가 가지 않는 이유를 적어도 좋습니다.
조원분들과 같이 이야기하며, 해결이 됐다면, 그 내용을 기입하고, 
**절대 지우지 말고 아래의 예시와 같이 취소선으로 해결했다고 표기해주세요!**

</aside>

### 모르겠어요

---

- 박성연 :
- 
- 1) console.log(this), 출력이 왜 obj1가 아니라 outer?????
- 2) 3번줄의 this가 8번줄의 self로 넘어가서 10번줄의 self가 outer로 출력 맞는지???
    - 

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8e50738d-8d93-49a0-8255-32b64050e974/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d9761ce0-50a2-44c8-abfd-759ee3b34b57/Untitled.png)

### 해결했어요

---

### 아직 모르겠어요

---

## 06. ****this, 콜백함수****검색해봤어요!

---

<aside>
🤔 아래에 각자 검색해본 내용중에 이해에 도움이 되거나 공유하고 싶은 링크를 붙여넣어 주세요.

</aside>

조원 1:

[코어 자바스크립트](https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=206513031)
